#!/usr/bin/env bash

printList() {
  length=$(echo $json | jq -c $(echo $2 | tr [] "  ") | jq length)

  if [ $length != "0" ]; then

    echo -e "\n---\e[1m $1 \e[0m---"

    echo $json | jq -c $2  | while read task; 
    do 
      pp $task
    done
  fi
}

pp(){
  task=$*

  completed="$(echo $task | jq '.completed')"
  str_start="[ ] "
  str_end=""

  if [ ! -z $completed ] && [ $completed = true ]; then
    str_start="[x] \e[9m"
    str_end="\e[0m"
  fi

  d=""
  rawDeadline=$(echo $task | jq -r '.deadlineAt')
  if [ "$rawDeadline" != "null" ]; then
    deadline=$(date "+%Y-%m-%d" -d "$rawDeadline")
    if [ -n "$deadline" ]; then 
      d="\e[01;33m(before $deadline)\e[0m"
    fi
  fi

  echo -e "$str_start$(echo $task | jq -r '(.id|tostring) + ": " + .humanTitle') $d $str_end"
}

close () {
  echo "Completing $1..."
  res=$(curl  -H "$token" "$url/api/tasks/done?id=$1" 2>/dev/null)

  if [ $res='"ok"' ];
  then
    echo "Done"
  else
    echo "Error"
  fi
}
list () {
  json="$(curl -H "$token" "$url/api/tasks" 2>/dev/null)"
  
  printList 'Today' '.todayTasks[]' 
  printList 'Overdue' '.overduedTasks[]' 
  printList 'Future' '.upcomingTasks[]' 
}

url="https://todayist.onrender.com"
token="Authorization: Basic $env_todayist"

case "$1" in
"prompt")
  json="$(curl -H "$token" "$url/api/tasks" 2>/dev/null)"

  overdues="$(echo $json | jq '.overduedTasks | map(. | select(.completed|not)) | length' )"
  today="$(echo $json | jq '.todayTasks | map(. | select(.completed|not)) | length' )"
  
  echo "$overdues over, $today today"
  ;;

"list")
  list
  ;;

"complete")
  shift
  
  args=$#
  if [ -z $1 ]; then 
    echo "NO params"
    chosen=$(gtd list | grep ":" | fzf | grep -Po "\d+")
    close $chosen
  fi

  while (( "$#" )); do
    close $1

    shift
  done

  ;;
"create")
  name=$(echo $2 | sed 's/ /%20/g')
  res=$(curl -H "$token" "$url/api/tasks/create?name=$name" 2>/dev/null)
  echo $res
  ;;

*) 
  echo "List"
  list
esac

